{"version":3,"sources":["components/Timer/timer.module.css","components/BreakInterval/break.module.css","components/sessionLength/session.module.css","App.module.css","components/BreakInterval/BreakInterval.jsx","components/sessionLength/SessionLength.jsx","components/Timer/Timer.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["module","exports","BreakInterval","props","className","classe","container","but","onClick","breakInterval","decreaseBreak","disabled","isPlay","increaseBreak","dis","SessionLength","sessionLength","decreaseSession","increaseSession","out","Timer","play","intervalId","setInterval","decreaseTimer","setState","onPlay","state","timerSecond","timerMinute","isSession","toggle","update","prevState","stop","clearInterval","reset","skip","box","this","action","Component","App","onIncreaseBreakLength","breakLength","onDecreaseBreakLength","onIncreaseSessionLength","onDecreaseSessionLength","onUpdateTimerMinute","onToggleInterval","onBreak","skipBreak","cont","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73afeb85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"timer_container__1fiG_\",\"box\":\"timer_box__2nAfW\",\"action\":\"timer_action__2mbut\",\"skip\":\"timer_skip__WpIil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"break_container__2BhQf\",\"but\":\"break_but__10QV3\",\"dis\":\"break_dis__2waF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"session_container__1dA9S\",\"but\":\"session_but__Uw9Sz\",\"out\":\"session_out__oZF5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__twykM\",\"cont\":\"App_cont__2ZlH5\"};","import React from 'react';\r\nimport classe from './break.module.css';\r\n\r\nconst BreakInterval = (props) => {\r\n    const decreaseCounter = () => {\r\n        if (props.breakInterval === 1) {\r\n            return\r\n        }\r\n\r\n        props.decreaseBreak()\r\n    }\r\n\r\n    const increaseCounter = () => {\r\n        if (props.breakInterval === 60) {\r\n            return\r\n        }\r\n\r\n        props.increaseBreak();\r\n    }\r\n\r\n    return ( \r\n        <div className = { classe.container }>\r\n            <p>break length</p>\r\n\r\n            <div className={ classe.but }>\r\n                <button \r\n                    onClick = { decreaseCounter }\r\n                    disabled = { props.isPlay }\r\n                >REDUCE</button>\r\n                <button \r\n                    onClick = { increaseCounter }\r\n                    disabled = { props.isPlay }\r\n                >INCREASE</button>\r\n            </div>\r\n\r\n            <p\r\n                className = { classe.dis }\r\n            >{ props.breakInterval }</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BreakInterval;","import React from 'react';\r\nimport classe from './session.module.css';\r\n\r\nconst SessionLength = (props) => {\r\n    const increaseCounter = () => {\r\n        if (props.sessionLength === 60) {\r\n            return;\r\n        }\r\n\r\n        props.increaseSession()\r\n    }\r\n\r\n    const decreaseCounter = () => {\r\n        if (props.sessionLength === 1) {\r\n            return;\r\n        }\r\n\r\n        props.decreaseSession()\r\n    }\r\n\r\n    return ( \r\n        <div className = { classe.container }>\r\n            <p>session length</p>\r\n\r\n            <div className={ classe.but }>\r\n                <button \r\n                    onClick = { decreaseCounter }\r\n                    disabled = { props.isPlay }\r\n                >DOWN</button>\r\n                <button \r\n                    onClick = { increaseCounter }\r\n                    disabled = { props.isPlay }\r\n                >UP</button>\r\n            </div>\r\n            <p\r\n                className = { classe.out }\r\n            >{ props.sessionLength }</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SessionLength;","import React, { Component } from 'react';\r\nimport classe from './timer.module.css'\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            isSession: true,\r\n            timerSecond: 0,\r\n            intervalId: 0\r\n         }\r\n    }\r\n\r\n    play = () => {\r\n        let intervalId = setInterval(this.decreaseTimer, 1000);\r\n        this.setState({\r\n            intervalId: intervalId\r\n        });\r\n        this.props.onPlay(true)\r\n    }\r\n\r\n    decreaseTimer = () => {\r\n        switch ( this.state.timerSecond ) {\r\n            case 0:\r\n                if (this.props.timerMinute === 0) {\r\n                    if (this.state.isSession) {\r\n                        this.setState({\r\n                            isSession: false\r\n                        });\r\n\r\n                        this.props.toggle(false)\r\n                    } else {\r\n                        this.setState({\r\n                            isSession: true\r\n                        });\r\n\r\n                        this.props.toggle(true);\r\n                    }\r\n                } else {\r\n                    this.props.update()\r\n                    this.setState({\r\n                        timerSecond: 59\r\n                    })\r\n                }\r\n                break;\r\n\r\n            default:\r\n                this.setState( (prevState) => {\r\n                    return {\r\n                        timerSecond: prevState.timerSecond - 1\r\n                    }\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    stop = () => {\r\n        clearInterval(this.state.intervalId);\r\n        this.props.onPlay(false);\r\n    }\r\n\r\n    reset = () => {\r\n        this.stop();\r\n        this.setState({\r\n            timerSecond: 0,\r\n            isSession: true\r\n        });\r\n        this.props.reset();\r\n        this.props.onPlay(false);\r\n    }\r\n\r\n    skip = () => {\r\n        if (!this.state.isSession) {\r\n            this.reset()\r\n            this.play()\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className={ classe.container }>\r\n                <h3>Hello Pomodoro</h3>\r\n                <div className={ classe.box }>\r\n                    <p>{ this.state.isSession ? \"session\" : \"break\" }</p>\r\n                    <div>\r\n                        <span> { this.props.timerMinute } : </span> \r\n                        <span> \r\n                            { this.state.timerSecond === 0 ? \"00\" : \r\n                            this.state.timerSecond < 10 ? \"0\" + this.state.timerSecond:\r\n                            this.state.timerSecond } \r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={ classe.action }>\r\n                    <button onClick = { this.play }>PLAY</button>\r\n                    <button onClick = { this.stop }>STOP</button>\r\n                    <button onClick = { this.reset }>REFRESH</button>\r\n                </div>\r\n\r\n                <div className = { classe.skip }>\r\n                    <button\r\n                        onClick = { this.skip }\r\n                        disabled = { this.state.isSession }\r\n                    >skip break</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Timer;","import React, { Component } from 'react';\r\nimport classe from'./App.module.css';\r\nimport BreakInterval from './components/BreakInterval/BreakInterval';\r\nimport SessionLength from './components/sessionLength/SessionLength';\r\nimport Timer from './components/Timer/Timer';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            breakLength: 5,\r\n            sessionLength: 25,\r\n            timerMinute: 25,\r\n            isPlay: false,\r\n            onBreak: false\r\n        }\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            timerMinute: this.state.sessionLength\r\n        })\r\n    }\r\n\r\n    onIncreaseBreakLength = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                breakLength: prevState.breakLength + 1\r\n            }\r\n        });\r\n    }\r\n\r\n    onDecreaseBreakLength = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                breakLength: prevState.breakLength - 1\r\n            }\r\n        });\r\n    }\r\n\r\n    onIncreaseSessionLength = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                sessionLength: prevState.sessionLength + 1,\r\n                timerMinute: prevState.timerMinute + 1\r\n            }\r\n        });\r\n    }\r\n\r\n    onDecreaseSessionLength = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                sessionLength: prevState.sessionLength - 1,\r\n                timerMinute: prevState.timerMinute - 1\r\n            }\r\n        });\r\n    }\r\n\r\n    onUpdateTimerMinute = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                timerMinute: prevState.timerMinute - 1\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleInterval = (isSession) => {\r\n        if (isSession) {\r\n            this.setState({ \r\n                timerMinute: this.state.sessionLength,\r\n                onBreak: false\r\n            })\r\n        } else {\r\n            this.setState({ \r\n                timerMinute: this.state.breakLength,\r\n                onBreak: true\r\n            })\r\n        }\r\n    }\r\n\r\n    onPlay = (play) => {\r\n        this.setState({ \r\n            isPlay: play\r\n        })\r\n    }\r\n\r\n    skipBreak = () => {\r\n        if (this.state.onBreak) {\r\n            this.setState({ \r\n                timerMinute: this.state.sessionLength \r\n            });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className={ classe.App }>\r\n                <div className={ classe.cont }></div>\r\n                <Timer \r\n                    timerMinute = { this.state.timerMinute }\r\n                    breakLength = { this.state.breakLength }\r\n                    update = { this.onUpdateTimerMinute }\r\n                    toggle = { this.onToggleInterval }\r\n                    reset = { this.reset }\r\n                    onPlay = { this.onPlay }\r\n                    onBreak = { this.state.onBreak }\r\n                    skipBreak = { this.skipBreak }\r\n                />\r\n\r\n                <BreakInterval \r\n                    isPlay = { this.state.isPlay }\r\n                    breakInterval = { this.state.breakLength }\r\n                    increaseBreak = { this.onIncreaseBreakLength }\r\n                    decreaseBreak = { this.onDecreaseBreakLength }\r\n                />\r\n\r\n                <SessionLength \r\n                    isPlay = { this.state.isPlay }\r\n                    sessionLength = { this.state.sessionLength }\r\n                    increaseSession = { this.onIncreaseSessionLength }\r\n                    decreaseSession = { this.onDecreaseSessionLength }\r\n                />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}